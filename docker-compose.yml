services:

    ####################################################################################################
    # PHP
    ####################################################################################################
    php:
        build: .docker/php
        container_name: monitoring-app-php
        ports:
            - 5173:5173
        volumes:
            - .:/var/www:cached
        command: bash -c "
            composer install
            && php artisan migrate:refresh
            && php artisan db:seed"

    ####################################################################################################
    # Nginx
    ####################################################################################################
    nginx:
        image: nginx
        container_name: monitoring-app-nginx
        ports:
            - 8080:80
        volumes:
            - .:/var/www
            - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - php

    ####################################################################################################
    # DATABASE (MySQL)
    ####################################################################################################
    db:
        image: mysql:8.1
        container_name: monitoring-app-db
        ports:
            - 33060:3306
        volumes:
            - .docker/db/data:/var/lib/mysql
            - .docker/logs:/var/log/mysql
            - .docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
            - .docker/db/sql:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}

    ####################################################################################################
    # Redis
    ####################################################################################################
    redis:
        image: redis:latest
        container_name: monitoring-app-redis
        command: redis-server --appendonly yes
        volumes:
        - .docker/redis/data:/data
        ports:
        - 63790:6379

    ####################################################################################################
    # RabbitMQ
    ####################################################################################################
    rabbitmq:
        image: rabbitmq:3.8
        container_name: monitoring-app-rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASSWORD: guest
            RABBITMQ_DEFAULT_VHOST: /
            RABBITMQ_SSL_CACERTFILE: /rootCA.pem
            RABBITMQ_SSL_CERTFILE: /rootCA.pem
            RABBITMQ_SSL_KEYFILE: /rootCA.key
            RABBITMQ_SSL_VERIFY: verify_none
            RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT: "false"
        volumes:
            - .docker/rabbitmq/rootCA.pem:/rootCA.pem:ro
            - .docker/rabbitmq/rootCA.key:/rootCA.key:ro
        ports:
            - "15671:15671"
            - "15672:15672"
            - "5671:5671"
            - "5672:5672"
#
#    rabbitmq-management:
#        image: rabbitmq:management
#        environment:
#            RABBITMQ_DEFAULT_USER: guest
#            RABBITMQ_DEFAULT_PASSWORD: guest
#            RABBITMQ_DEFAULT_VHOST: /
#            RABBITMQ_MANAGEMENT_SSL_CACERTFILE: /rootCA.pem
#            RABBITMQ_MANAGEMENT_SSL_CERTFILE: /rootCA.pem
#            RABBITMQ_MANAGEMENT_SSL_KEYFILE: /rootCA.key
#            RABBITMQ_MANAGEMENT_SSL_VERIFY: verify_none
#            RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT: "false"
#        volumes:
#            - .docker/rabbitmq/rootCA.pem:/rootCA.pem:ro
#            - .docker/rabbitmq/rootCA.key:/rootCA.key:ro
#        ports:
#            - 15671:15671
#            - 15672:15672
#            - 5671:5671
#            - 5672:5672
